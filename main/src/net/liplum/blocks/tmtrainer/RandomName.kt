package net.liplum.blocks.tmtrainer;

import arc.math.Mathf;
import org.jetbrains.annotations.NotNull;

public class RandomName {
    /*
        Generated by tools/src/RandomName.py
     */
    public static final int InitColorCount = 255;
    public static final int MaxColorNumber = 0xFF_FF_FF;
    /**
     * Don't use '$', '@','ยง'
     */
    public static char[] AllChars = {
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L',
            'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
            'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
            'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
            'w', 'x', 'y',
            '%', '&', '#', '~', '*', '|', '?', '!'
    };
    public static String[] AllColors;

    static {
        AllColors = new String[InitColorCount];
        for (int i = 0; i < InitColorCount; i++) {
            AllColors[i] = "[#" + Integer.toHexString(Mathf.random(MaxColorNumber)) + ']';
        }
    }

    private static final StringBuilder builder = new StringBuilder();

    @NotNull
    public static String one(int length) {
        builder.setLength(0);
        for (int i = 0; i < length; i++) {
            builder.append(AllColors[Mathf.random(AllColors.length - 1)]);
            builder.append(AllChars[Mathf.random(AllChars.length - 1)]);
        }
        return builder.toString();
    }

    @NotNull
    public static String oneColor() {
        return AllColors[Mathf.random(AllColors.length - 1)];
    }

    @NotNull
    public static String randomTinted(String text) {
        return oneColor() + text + "[]";
    }
}
